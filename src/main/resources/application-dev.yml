spring:
  datasource:
    url: ${DATABASE_URL}
    username:
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  jwt:
    secret: ${JWT_SECRET_KEY}
  admin:
    first_name: ${ADMIN_FIRSTNAME}
    last_name: ${ADMIN_LASTNAME}
    email: ${ADMIN_EMAIL}
    password: ${ADMIN_PASSWORD}
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SUPPORT_EMAIL_HOST}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  thymeleaf:
    prefix: classpath:/templates/email_templates/
  web:
    resources:
      static-locations: classpath:/static/, file:/uploads/avatars/
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 20MB
  devtools:
    restart:
      enabled: true
      exclude: static/**,public/**
      additional-paths: src/main/java,src/main/resources
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: /
    listener:
      simple:
        concurrency: 1
        max-concurrency: 5
    connection-timeout: 3000
    requested-heartbeat: 60
upload:
  avatar-dir: ${AVATAR_DIR}
rabbitmq:
  queue:
    email:
      name: ${RABBITMQ_QUEUE_EMAIL}
      dlx-name: ${RABBITMQ_EMAIL_DLX_QUEUE}
  exchange:
    email:
      name: ${RABBITMQ_EXCHANGE_EMAIL}
      dlx-name: ${RABBITMQ_EMAIL_DLX_EXCHANGE}
  routingKey:
    email:
      name: ${RABBITMQ_ROUTING_KEY_EMAIL}
      dlx-name: ${RABBITMQ_EMAIL_FAILED}